{"version":3,"file":"js/419.3432cfa0.js","mappings":"oNAGA,cACCA,WAAY,CACXC,aAAAA,EAAAA,YAEDC,MAAO,CACNC,QAAS,CAAEC,KAAMC,OAAQC,UAAU,GACnCC,oBAAqB,CAAEH,KAAMC,OAAQC,UAAU,EAAOE,QAAS,OAEhEC,KAAM,WACL,MAAO,CACNC,aAAc,IAAIC,EAAAA,EAAqBC,KAAKL,qBAC5CM,aAAc,IAAIC,gBAClBC,WAAY,GACZC,eAAgB,CACf,CAAEC,MAAO,mBAAoBC,IAAK,WAAYC,UAAWP,KAAKQ,OAAOC,YACrE,CAAEJ,MAAO,aAAcC,IAAK,cAI/BI,QAAS,WAAF,uCAAE,8FAERV,KAAKW,aAAc,EACnBX,KAAKY,iBACLZ,KAAKW,aAAc,EAJX,gDAAF,qDAAE,GAMTE,QAAS,CACRC,mBAAoB,WACnBd,KAAKC,aAAeD,KAAKF,aAAaiB,mBAEvCH,eAAgB,WAAF,uCAAE,6HAEGZ,KAAKgB,KAAKC,IAAIC,OAAO,CAAE3B,QAASS,KAAKT,QAAQ4B,OAFhD,OAEVC,EAFU,OAGdpB,KAAKG,WAAaiB,EAAKC,KAAI,SAAAJ,GAAG,MAAK,CAAEK,MAAOL,EAAIE,KAAMI,KAAMN,EAAIE,SAHlD,mDAKdnB,KAAKwB,qBAAqBxB,KAAKgB,KAAKS,WAAV,OALZ,yDAAF,qDAAE,M,2GC9BG1B,G,gDAAAA,WAIpB,WAAYD,IAAc,mCAHnB,KAGmB,wBAFd,CAAE4B,IAAK,KAAMC,IAAK,OAGzB7B,IACC8B,MAAMC,QAAQ/B,EAAasB,QAC9BpB,KAAKoB,MAAL,OAAgBtB,EAAasB,OAE1BtB,EAAagC,YAChB9B,KAAK8B,UAAY,CAChBJ,IAAK5B,EAAagC,UAAUJ,IAC5BC,IAAK7B,EAAagC,UAAUH,MAG9B3B,KAAK+B,OAASjC,EAAaiC,Q,8CAI7B,WACC,IADiB,EACb9B,EAAe,IAAIC,gBADN,UAGCF,KAAKoB,MAHN,IAGjB,IAAK,EAAL,qBAA6B,KAAlBH,EAAkB,QAC5BhB,EAAa+B,OAAO,WAAYf,IAJhB,8BAmBjB,OAZIjB,KAAK8B,UAAUJ,KAClBzB,EAAagC,IAAI,gBAAiBjC,KAAK8B,UAAUJ,IAAIQ,eAGlDlC,KAAK8B,UAAUH,KAClB1B,EAAagC,IAAI,gBAAiBjC,KAAK8B,UAAUH,IAAIO,eAGlDlC,KAAK+B,QACR9B,EAAagC,IAAI,SAAUjC,KAAK+B,QAG1B9B,M,EAtCYF","sources":["webpack://svo/./src/components/metadata/MetadataMixin.js","webpack://svo/./src/services/svo/MetadataSearchFilter.js"],"sourcesContent":["import MetadataList from './MetadataList';\nimport MetadataSearchFilter from '@/services/svo/MetadataSearchFilter';\n\nexport default {\n\tcomponents: {\n\t\tMetadataList\n\t},\n\tprops: {\n\t\tdataset: { type: Object, required: true },\n\t\tinitialSearchFilter: { type: Object, required: false, default: null }\n\t},\n\tdata: function() {\n\t\treturn {\n\t\t\tsearchFilter: new MetadataSearchFilter(this.initialSearchFilter),\n\t\t\tsearchParams: new URLSearchParams(),\n\t\t\ttagOptions: [],\n\t\t\tdefaultColumns: [\n\t\t\t\t{ label: 'Observation date', key: 'date_beg', formatter: this.$utils.formatDate },\n\t\t\t\t{ label: 'Wavelength', key: 'wavemin' }\n\t\t\t]\n\t\t};\n\t},\n\tcreated: async function() {\n\t\t// Fetch and create the options of the form select\n\t\tthis.showOverlay = true;\n\t\tthis.loadTagOptions();\n\t\tthis.showOverlay = false;\n\t},\n\tmethods: {\n\t\tupdateSearchParams: function() {\n\t\t\tthis.searchParams = this.searchFilter.getSearchParams();\n\t\t},\n\t\tloadTagOptions: async function() {\n\t\t\ttry {\n\t\t\t\tlet tags = await this.$SVO.tag.getAll({ dataset: this.dataset.name });\n\t\t\t\tthis.tagOptions = tags.map(tag => ({ value: tag.name, text: tag.name }));\n\t\t\t} catch (error) {\n\t\t\t\tthis.$displayErrorMessage(this.$SVO.parseError(error));\n\t\t\t}\n\t\t}\n\t}\n};\n","/* The SearchFilter is the interface between the API and the search form data */\n\nexport default class MetadataSearchFilter {\n\ttags = [];\n\tdateRange = { min: null, max: null };\n\n\tconstructor(searchFilter) {\n\t\tif (searchFilter) {\n\t\t\tif (Array.isArray(searchFilter.tags)) {\n\t\t\t\tthis.tags = [...searchFilter.tags];\n\t\t\t}\n\t\t\tif (searchFilter.dateRange) {\n\t\t\t\tthis.dateRange = {\n\t\t\t\t\tmin: searchFilter.dateRange.min,\n\t\t\t\t\tmax: searchFilter.dateRange.max\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.search = searchFilter.search;\n\t\t}\n\t}\n\n\tgetSearchParams() {\n\t\tlet searchParams = new URLSearchParams();\n\n\t\tfor (const tag of this.tags) {\n\t\t\tsearchParams.append('tags__in', tag);\n\t\t}\n\n\t\tif (this.dateRange.min) {\n\t\t\tsearchParams.set('date_end__gte', this.dateRange.min.toISOString());\n\t\t}\n\n\t\tif (this.dateRange.max) {\n\t\t\tsearchParams.set('date_beg__lte', this.dateRange.max.toISOString());\n\t\t}\n\n\t\tif (this.search) {\n\t\t\tsearchParams.set('search', this.search);\n\t\t}\n\n\t\treturn searchParams;\n\t}\n}\n"],"names":["components","MetadataList","props","dataset","type","Object","required","initialSearchFilter","default","data","searchFilter","MetadataSearchFilter","this","searchParams","URLSearchParams","tagOptions","defaultColumns","label","key","formatter","$utils","formatDate","created","showOverlay","loadTagOptions","methods","updateSearchParams","getSearchParams","$SVO","tag","getAll","name","tags","map","value","text","$displayErrorMessage","parseError","min","max","Array","isArray","dateRange","search","append","set","toISOString"],"sourceRoot":""}