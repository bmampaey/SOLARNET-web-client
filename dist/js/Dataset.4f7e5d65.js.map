{"version":3,"file":"js/Dataset.4f7e5d65.js","mappings":"qGACA,IAAIA,EAAI,EAAQ,MACZC,EAAU,eACVC,EAA+B,EAAQ,MAEvCC,EAAsBD,EAA6B,UAKvDF,EAAE,CAAEI,OAAQ,QAASC,OAAO,EAAMC,QAASH,GAAuB,CAChEI,OAAQ,SAAgBC,GACtB,OAAOP,EAAQQ,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,O,2BCZ3E,cACCC,QAAS,WACT,cAAe,YACfC,MAAO,QACPC,QAAS,UACT,cAAe,YACf,eAAgB,cAChB,cAAe,YACf,cAAe,YACf,eAAgB,aAChB,WAAY,UACZ,kBAAmB,iBACnB,eAAgB,aAChB,eAAgB,aAChB,eAAgB,aAChBC,IAAK","sources":["webpack://svo/./node_modules/core-js/modules/es.array.filter.js","webpack://svo/./src/components/metadata/index.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export default {\n\tdefault: 'Metadata',\n\t'AIA level 1': 'AiaLevel1',\n\tCRISP: 'Crisp',\n\tCHROMIS: 'Chromis',\n\t'EIT level 0': 'EitLevel0',\n\t'EIT synoptic': 'EitSynoptic',\n\t'EUI level 1': 'EuiLevel2',\n\t'EUI level 2': 'EuiLevel2',\n\t'EUVI level 0': 'EuviLevel0',\n\t'GAIA DEM': 'GaiaDem',\n\t'HMI magnetogram': 'HmiMagnetogram',\n\t'SWAP level 1': 'SwapLevel1',\n\t'LYRA level 2': 'LyraLevel2',\n\t'LYRA level 3': 'LyraLevel2',\n\tXRT: 'Xrt'\n};\n"],"names":["$","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","filter","callbackfn","this","arguments","length","undefined","default","CRISP","CHROMIS","XRT"],"sourceRoot":""}