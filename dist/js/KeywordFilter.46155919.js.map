{"version":3,"file":"js/KeywordFilter.46155919.js","mappings":"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","sources":["webpack://web-client/./src/components/metadata/KeywordFilter.vue","webpack://web-client/src/components/metadata/KeywordFilter.vue","webpack://web-client/./src/components/metadata/KeywordFilter.vue?0f54","webpack://web-client/./src/components/metadata/KeywordFilter.vue?2086"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('b-form-row',[_c('b-col',[_c('b-form-group',{attrs:{\"label\":\"Add a filter for the keyword\",\"label-for\":_vm.uniqueId('select-keyword')}},[_c('b-form-select',{attrs:{\"id\":_vm.uniqueId('select-keyword'),\"options\":_vm.keywordOptions},model:{value:(_vm.selectedKeyword),callback:function ($$v) {_vm.selectedKeyword=$$v},expression:\"selectedKeyword\"}})],1)],1),_c('b-col',{staticClass:\"mb-3\",attrs:{\"cols\":\"auto\",\"align-self\":\"end\"}},[_c('b-button',{attrs:{\"variant\":\"light\",\"title\":_vm.selectedKeyword ? `Add filter for keyword ${_vm.selectedKeyword.verbose_name}` : 'Select a keyword to add a filter'},on:{\"click\":_vm.addKeywordFilter}},[_c('b-icon',{attrs:{\"icon\":\"plus\"}})],1)],1)],1),_vm._l((_vm.keywordFilters),function(keyword){return _c('b-form-row',{key:keyword.name},[_c('b-col',[(keyword.type == 'text')?_c('b-form-group',{attrs:{\"label\":`${keyword.verbose_name} contains`,\"label-for\":_vm.uniqueId(keyword.name)}},[_c('b-form-input',{attrs:{\"id\":_vm.uniqueId(keyword.name),\"type\":\"text\"},model:{value:(_vm.filterValues[keyword.name]),callback:function ($$v) {_vm.$set(_vm.filterValues, keyword.name, $$v)},expression:\"filterValues[keyword.name]\"}})],1):(keyword.type == 'time (ISO 8601)')?_c('datetime-range',{attrs:{\"label\":`${keyword.verbose_name} is between`},model:{value:(_vm.filterValues[keyword.name]),callback:function ($$v) {_vm.$set(_vm.filterValues, keyword.name, $$v)},expression:\"filterValues[keyword.name]\"}}):(keyword.type == 'integer')?_c('number-range',{attrs:{\"label\":`${keyword.verbose_name} is between`,\"unit\":keyword.unit,\"step\":\"1\"},model:{value:(_vm.filterValues[keyword.name]),callback:function ($$v) {_vm.$set(_vm.filterValues, keyword.name, $$v)},expression:\"filterValues[keyword.name]\"}}):(keyword.type == 'real')?_c('number-range',{attrs:{\"label\":`${keyword.verbose_name} is between`,\"unit\":keyword.unit},model:{value:(_vm.filterValues[keyword.name]),callback:function ($$v) {_vm.$set(_vm.filterValues, keyword.name, $$v)},expression:\"filterValues[keyword.name]\"}}):(keyword.type == 'boolean')?_c('b-form-group',{attrs:{\"label\":`${keyword.verbose_name} is`},scopedSlots:_vm._u([{key:\"default\",fn:function({ ariaDescribedby }){return [_c('b-form-radio-group',{attrs:{\"options\":[true, false],\"aria-describedby\":ariaDescribedby,\"buttons\":\"\",\"button-variant\":\"outline-dark\"},model:{value:(_vm.filterValues[keyword.name]),callback:function ($$v) {_vm.$set(_vm.filterValues, keyword.name, $$v)},expression:\"filterValues[keyword.name]\"}})]}}],null,true)}):_vm._e()],1),_c('b-col',{staticClass:\"mb-3\",attrs:{\"cols\":\"auto\",\"align-self\":\"end\"}},[_c('b-button',{attrs:{\"variant\":\"light\",\"title\":`Remove filter for keyword ${keyword.verbose_name}`},on:{\"click\":function($event){return _vm.removeKeywordFilter(keyword)}}},[_c('b-icon',{attrs:{\"icon\":\"x\"}})],1)],1)],1)})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<b-form-row>\n\t\t\t<b-col>\n\t\t\t\t<b-form-group label=\"Add a filter for the keyword\" :label-for=\"uniqueId('select-keyword')\">\n\t\t\t\t\t<b-form-select :id=\"uniqueId('select-keyword')\" v-model=\"selectedKeyword\" :options=\"keywordOptions\"></b-form-select>\n\t\t\t\t</b-form-group>\n\t\t\t</b-col>\n\t\t\t<b-col cols=\"auto\" align-self=\"end\" class=\"mb-3\">\n\t\t\t\t<b-button variant=\"light\" :title=\"selectedKeyword ? `Add filter for keyword ${selectedKeyword.verbose_name}` : 'Select a keyword to add a filter'\" @click=\"addKeywordFilter\"\n\t\t\t\t\t><b-icon icon=\"plus\"></b-icon\n\t\t\t\t></b-button>\n\t\t\t</b-col>\n\t\t</b-form-row>\n\t\t<b-form-row v-for=\"keyword in keywordFilters\" :key=\"keyword.name\">\n\t\t\t<b-col>\n\t\t\t\t<b-form-group v-if=\"keyword.type == 'text'\" :label=\"`${keyword.verbose_name} contains`\" :label-for=\"uniqueId(keyword.name)\">\n\t\t\t\t\t<b-form-input :id=\"uniqueId(keyword.name)\" v-model=\"filterValues[keyword.name]\" type=\"text\"></b-form-input>\n\t\t\t\t</b-form-group>\n\t\t\t\t<datetime-range v-else-if=\"keyword.type == 'time (ISO 8601)'\" v-model=\"filterValues[keyword.name]\" :label=\"`${keyword.verbose_name} is between`\"></datetime-range>\n\t\t\t\t<number-range v-else-if=\"keyword.type == 'integer'\" v-model=\"filterValues[keyword.name]\" :label=\"`${keyword.verbose_name} is between`\" :unit=\"keyword.unit\" step=\"1\"></number-range>\n\t\t\t\t<number-range v-else-if=\"keyword.type == 'real'\" v-model=\"filterValues[keyword.name]\" :label=\"`${keyword.verbose_name} is between`\" :unit=\"keyword.unit\"></number-range>\n\t\t\t\t<b-form-group v-else-if=\"keyword.type == 'boolean'\" v-slot=\"{ ariaDescribedby }\" :label=\"`${keyword.verbose_name} is`\">\n\t\t\t\t\t<b-form-radio-group v-model=\"filterValues[keyword.name]\" :options=\"[true, false]\" :aria-describedby=\"ariaDescribedby\" buttons button-variant=\"outline-dark\"></b-form-radio-group>\n\t\t\t\t</b-form-group>\n\t\t\t</b-col>\n\t\t\t<b-col cols=\"auto\" align-self=\"end\" class=\"mb-3\">\n\t\t\t\t<b-button variant=\"light\" :title=\"`Remove filter for keyword ${keyword.verbose_name}`\" @click=\"removeKeywordFilter(keyword)\"><b-icon icon=\"x\"></b-icon></b-button>\n\t\t\t</b-col>\n\t\t</b-form-row>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'KeywordFilter',\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\trequired: true\n\t\t},\n\t\tkeywords: {\n\t\t\ttype: Array,\n\t\t\trequired: true\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tuniqueIdMap: new Map(),\n\t\t\tselectedKeyword: null,\n\t\t\tselectedKeywords: Object.fromEntries(this.keywords.map(keyword => [keyword.name, false])),\n\t\t\tfilterValues: Object.fromEntries(\n\t\t\t\tthis.keywords.map(keyword => (keyword.type == 'integer' || keyword.type == 'real' || keyword.type == 'time (ISO 8601)' ? [keyword.name, { min: null, max: null }] : [keyword.name, null]))\n\t\t\t)\n\t\t};\n\t},\n\tcomputed: {\n\t\tkeywordOptions() {\n\t\t\treturn this.keywords\n\t\t\t\t.filter(keyword => !this.selectedKeywords[keyword.name])\n\t\t\t\t.map(keyword => ({\n\t\t\t\t\ttext: keyword.verbose_name,\n\t\t\t\t\tvalue: keyword\n\t\t\t\t}));\n\t\t},\n\t\tkeywordFilters() {\n\t\t\treturn this.keywords.filter(keyword => this.selectedKeywords[keyword.name]);\n\t\t}\n\t},\n\twatch: {\n\t\tfilterValues: {\n\t\t\thandler: 'updateModelValue',\n\t\t\timmediate: true,\n\t\t\tdeep: true\n\t\t}\n\t},\n\tmethods: {\n\t\tuniqueId(value) {\n\t\t\tif (!this.uniqueIdMap.has(value)) {\n\t\t\t\tthis.uniqueIdMap.set(value, this.$utils.getUniqueId());\n\t\t\t}\n\t\t\treturn this.uniqueIdMap.get(value);\n\t\t},\n\t\taddKeywordFilter() {\n\t\t\tif (this.selectedKeyword) {\n\t\t\t\tthis.selectedKeywords[this.selectedKeyword.name] = true;\n\t\t\t\t// if (this.filterValues[this.selectedKeyword.name] == null) {\n\t\t\t\t// \tif (this.selectedKeyword.type == 'integer' || this.selectedKeyword.type == 'real' || this.selectedKeyword.type == 'time (ISO 8601)') {\n\t\t\t\t// \t\tthis.filterValues[this.selectedKeyword.name] = { min: null, max: null };\n\t\t\t\t// \t} else {\n\t\t\t\t// \t\tthis.filterValues[this.selectedKeyword.name] = null;\n\t\t\t\t// \t}\n\t\t\t\t// }\n\t\t\t\tthis.selectedKeyword = null;\n\t\t\t}\n\t\t},\n\t\tremoveKeywordFilter(keyword) {\n\t\t\tthis.selectedKeywords[keyword.name] = false;\n\t\t\tthis.selectedKeyword = keyword;\n\t\t\tthis.updateModelValue();\n\t\t},\n\t\tupdateModelValue() {\n\t\t\tlet searchFilter = [];\n\t\t\tfor (const keyword of this.keywordFilters) {\n\t\t\t\tif (keyword.type == 'text') {\n\t\t\t\t\tif (this.filterValues[keyword.name]) {\n\t\t\t\t\t\tsearchFilter.push(`(${keyword.name}__icontains=${this.filterValues[keyword.name]})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (keyword.type == 'integer' || keyword.type == 'real') {\n\t\t\t\t\tif (this.filterValues[keyword.name]?.min) {\n\t\t\t\t\t\tsearchFilter.push(`(${keyword.name}__gte=${this.filterValues[keyword.name].min})`);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.filterValues[keyword.name]?.max) {\n\t\t\t\t\t\tsearchFilter.push(`(${keyword.name}__lte=${this.filterValues[keyword.name].max})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (keyword.type == 'time (ISO 8601)') {\n\t\t\t\t\tif (this.filterValues[keyword.name]?.min) {\n\t\t\t\t\t\tsearchFilter.push(`(${keyword.name}__gte=${this.filterValues[keyword.name].min.toISOString()})`);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.filterValues[keyword.name]?.max) {\n\t\t\t\t\t\tsearchFilter.push(`(${keyword.name}__lte=${this.filterValues[keyword.name].max.toISOString()})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (keyword.type == 'boolean') {\n\t\t\t\t\tif (this.filterValues[keyword.name]) {\n\t\t\t\t\t\tsearchFilter.push(`(${keyword.name}=${this.filterValues[keyword.name]})`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$emit('input', searchFilter.join('and'));\n\t\t}\n\t}\n};\n</script>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./KeywordFilter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./KeywordFilter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./KeywordFilter.vue?vue&type=template&id=f5941550&\"\nimport script from \"./KeywordFilter.vue?vue&type=script&lang=js&\"\nexport * from \"./KeywordFilter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","uniqueId","keywordOptions","model","value","selectedKeyword","callback","$$v","expression","staticClass","verbose_name","on","addKeywordFilter","_l","keywordFilters","keyword","key","name","type","filterValues","$set","unit","scopedSlots","_u","fn","ariaDescribedby","_e","$event","removeKeywordFilter","staticRenderFns","props","String","required","keywords","Array","data","uniqueIdMap","Map","selectedKeywords","Object","fromEntries","map","min","max","computed","filter","text","watch","handler","immediate","deep","methods","has","set","$utils","getUniqueId","get","updateModelValue","searchFilter","push","toISOString","$emit","join","component"],"sourceRoot":""}